plot(density(y_xmax), main = "Y from x max")
abline(v=quantile(y_xmax,c(0.025, 0.975)), col="red")
posteriors
plot(posteriors[,i], type="l")
posteriors[,i]
as.numeric(posteriors[,i])
colnames(posteriors)
# burnin:
for (i in 1:33){plot(as.numeric(posteriors[,i]), type="l", main = colnames(posteriors)[i]) }
knitr::opts_chunk$set(echo = TRUE)
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 5,
curve=2, unCol = "#070b8c")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
raw <- read.csv("raw_data/data.csv", sep = "\t", header = T)
df <- raw %>% na.omit() %>%
mutate(attention = ifelse(VCL6+VCL9+VCL12==0, 1,0),     # attention check
age_rgp = case_when(
(60 <= age & age < 99)~"60up",
(50 <= age & age <= 59)~"50_59",
(40 <= age & age <= 49)~"40_49",
(30 <= age & age <= 39)~"30_39",
(18 <= age & age <= 29)~"18_29",
(12 <= age & age <= 17)~"12_17",
(age < 12)~"0_11"
)
) %>%
dplyr::select(!matches("Q\\d+E$|Q\\d+I$|^VCL")) %>%            # remove Q_E & Q_I & VCL_
dplyr::select(!c(introelapse, testelapse, surveyelapse,        # remove useless variables by def
screensize, uniquenetworklocation, source))
# filtering:
df <- df %>%
filter(attention==1)  %>%          # 34,577
filter(age <99) %>%
filter(country=="US")
#
# table(df$age_rgp)
# df <- df %>% filter(age_rgp %in% c("50_59", "30_39"))
# old <- df[df$age_rgp=="50_59",1:42]
# young <- df[df$age_rgp=="30_39",1:42]
# saveRDS(old, "old.rds")
# saveRDS(young, "young.rds")
old <- readRDS("old.rds")
young <- readRDS("young.rds")
# compare DASS-21 and those excluded:
idx_21 <- sort(c(8,30,4,2,12,3,42,38,6,41,40,10,39,26,35,28,31,17,18,25,20))
dass_21 <- df[,idx_21]
dass_rm <- df[,-idx_21]
raw_num <- c(47352, 104148, 149771, 103649, 119677, 173133, 166299, 154273,
134925, 136417, 149582, 154816, 115094,124344 )
perc <- c(13.3, 7.1, 7.2, 4.7, 5.7, 8.9, 8.7, 8.1, 6.7, 6.3, 6.4, 6.5, 4.8, 5.6 )
dr <- raw_num/(perc*6945521)   # depressed proportion
df_ratio <- data.frame(age=c("0 to 11", "12 to 14",
"15 to 17", "18 to 20",
"21 to 24","25 to 29",
"30 to 34", "35 to 39",
"40 to 44", "45 to 49",
"50 to 54","55 to 59",
"60 to 64", "65 yrs and older"
),
Proportion_of_diagnosed_depression=round(dr,4))
sumup <- function(x){
c(x[1], sum(x[2:3]), sum(x[4:6]), sum(x[7:8]), sum(x[9:10]), sum(x[11:12]), sum(x[13:14]) )
}
df_ratio_rgp <- data.frame(
age=c("0 to 11", "12 to 17", "18 to 29",
"30 to 39", "40 to 49", "50 to 59", "60 yrs and older"),
Proportion_of_diagnosed_depression=round(sumup(raw_num)/(sumup(perc)*6945521),4)
)
knitr::kable(df_ratio_rgp) # select 30-39 & 50-59
library(FactoMineR)
library(factoextra)
library(ggcorrplot)   # cor plot
library(lavaan)
library(semPlot)
# correlation matrix
corr <- cor(dass_21)
cor.p <- cor_pmat(corr)
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5, p.mat = cor.p)
# -> some are significantly correlated. May do dimension reduction
# EFA:
res.pca <- PCA(dass_21, scale.unit = F, ncp = 10, graph = TRUE)                     # plot2: biplot: maybe don't show
plot(1:10, res.pca$eig[1:10,1], type="o", xlab = "Dimension", ylab="Eigen Value")
abline(h=1, lty=2, col="red")
# -> 3 factors, very interesting, because DASS is formed by 3 latent variables
res.pca$eig
fviz_eig(res.pca, addlabels = TRUE)
# variance of
library(corrplot)
res.var <- get_pca_var(res.pca)
ggcorrplot(res.var$cor)          # how to explain?
paste0(names(df)[idx_21],"~~", names(df)[idx_21]) %>% cat(sep = "\n")
# CFA:
mod <- '
Depression =~ 1*Q3A + Q10A + Q17A + Q26A + Q31A + Q38A+ Q42A
Anxiety =~ 1*Q2A + Q4A + Q20A + Q25A + Q28A + Q30A + Q40A+ Q41A
Stress =~ 1*Q6A + Q8A + Q12A + Q18A + Q35A  + Q39A
Q2A~~Q2A
Q3A~~Q3A
Q4A~~Q4A
Q6A~~Q6A
Q8A~~Q8A
Q10A~~Q10A
Q12A~~Q12A
Q17A~~Q17A
Q18A~~Q18A
Q20A~~Q20A
Q25A~~Q25A
Q26A~~Q26A
Q28A~~Q28A
Q30A~~Q30A
Q31A~~Q31A
Q35A~~Q35A
Q38A~~Q38A
Q39A~~Q39A
Q40A~~Q40A
Q41A~~Q41A
Q42A~~Q42A
Depression~~Depression
Anxiety~~Anxiety
Stress~~Stress
Depression~~Anxiety+Stress
Stress~~Anxiety
'
fit <- lavaan(mod, data=dass_21)
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 5,
curve=2, unCol = "#070b8c")
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5, p.mat = cor.p)
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5, p.mat = cor.p)
df
# EFA in D:
df_d <- df[,c(3,10,17,26,31,38,42)]
df_d <- df[,c(3,10,17,26,31,38,42)]
res.pca <- PCA(df_d, scale.unit = F, ncp = 10, graph = TRUE)                     # plot2: biplot: maybe don't show
plot(1:10, res.pca$eig[1:10,1], type="o", xlab = "Dimension", ylab="Eigen Value")
df_d <- df[,c(3,10,17,26,31,38,42)]
res.pca <- PCA(df_d, scale.unit = F, ncp = 10, graph = F)                     # plot2: biplot: maybe don't show
plot(1:7, res.pca$eig, type="o", xlab = "Dimension", ylab="Eigen Value")
res.pca$eig
plot(1:7, res.pca$eig[,1], type="o", xlab = "Dimension", ylab="Eigen Value")
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5, p.mat = cor.p, lab = T)
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5, p.mat = cor.p, lab = T)
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5,
p.mat = cor.p, lab = T, type = "lower")
p.mat = cor.p, lab = T, type = "lower")
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5,
p.mat = cor.p, lab = T, type = "lower")
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5,
p.mat = cor.p, lab = T)
library(FactoMineR)
library(factoextra)
library(ggcorrplot)   # cor plot
library(lavaan)
library(semPlot)
# correlation matrix
corr <- cor(dass_21)
cor.p <- cor_pmat(corr)
ggcorrplot(corr, hc.order = TRUE, lab_size = 3.5,
p.mat = cor.p, lab = T, type = "lower")
# -> some are significantly correlated. May do dimension reduction
# EFA:
res.pca <- PCA(dass_21, scale.unit = F, ncp = 10, graph = TRUE)                     # plot2: biplot: maybe don't show
plot(1:10, res.pca$eig[1:10,1], type="o", xlab = "Dimension", ylab="Eigen Value")
abline(h=1, lty=2, col="red")
# -> 3 factors, very interesting, because DASS is formed by 3 latent variables
res.pca$eig
fviz_eig(res.pca, addlabels = TRUE)
# EFA in D:
df_d <- df[,c(3,10,17,26,31,38,42)]
res.pca <- PCA(df_d, scale.unit = F, ncp = 10, graph = F)                     # plot2: biplot: maybe don't show
plot(1:7, res.pca$eig[,1], type="o", xlab = "Dimension", ylab="Eigen Value")
res.var <- get_pca_var(res.pca)
ggcorrplot(res.var$cor)          # how to explain?
paste0(names(df)[idx_21],"~~", names(df)[idx_21]) %>% cat(sep = "\n")
# CFA:
mod <- '
Depression =~ 1*Q3A + Q10A + Q17A + Q26A + Q31A + Q38A+ Q42A
Anxiety =~ 1*Q2A + Q4A + Q20A + Q25A + Q28A + Q30A + Q40A+ Q41A
Stress =~ 1*Q6A + Q8A + Q12A + Q18A + Q35A  + Q39A
Q2A~~Q2A
Q3A~~Q3A
Q4A~~Q4A
Q6A~~Q6A
Q8A~~Q8A
Q10A~~Q10A
Q12A~~Q12A
Q17A~~Q17A
Q18A~~Q18A
Q20A~~Q20A
Q25A~~Q25A
Q26A~~Q26A
Q28A~~Q28A
Q30A~~Q30A
Q31A~~Q31A
Q35A~~Q35A
Q38A~~Q38A
Q39A~~Q39A
Q40A~~Q40A
Q41A~~Q41A
Q42A~~Q42A
Depression~~Depression
Anxiety~~Anxiety
Stress~~Stress
Depression~~Anxiety+Stress
Stress~~Anxiety
'
fit <- lavaan(mod, data=dass_21)
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 5,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 5,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 5,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 4, sizeInt = 2, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 2, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.2,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 2, sizeLat = 3,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.2,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 1, sizeInt = 2, sizeLat = 3,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.2,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 1, sizeLat = 3,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.2,
edge.width = 0.5, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 5, sizeLat = 3,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 5, sizeLat = 3,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 2, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 5, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 1, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
2
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 2,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "par", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
summary(fit)
summary(fit, fit.measures=T)
summary(fit, fit.measures=T)
# EFA:
res.pca <- PCA(dass_21, scale.unit = F, ncp = 10, graph = TRUE)                     # plot2: biplot: maybe don't show
res.pca <- PCA(dass_21, scale.unit = F, ncp = 10, graph = TRUE)                     # plot2: biplot: maybe don't show
plot(1:7, res.pca$eig[,1], type="o", xlab = "Dimension", ylab="Eigen Value")
fviz_eig(res.pca, addlabels = TRUE)
fviz_eig(res.pca, addlabels = TRUE)
fviz_eig(res.pca, addlabels = TRUE, choice = "eigenvalue")
fviz_eig(res.pca, addlabels = TRUE, choice = "eigenvalue")
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
mod <- '
Depression =~ 1*Q3A + Q10A + Q17A + Q26A + Q31A + Q38A
Anxiety =~ 1*Q4A + Q20A + Q25A + Q28A + Q30A + Q40A+ Q41A
Stress =~ 1*Q6A + Q8A + Q12A + Q39A
Q3A~~Q3A
Q4A~~Q4A
Q6A~~Q6A
Q8A~~Q8A
Q10A~~Q10A
Q12A~~Q12A
Q17A~~Q17A
Q20A~~Q20A
Q25A~~Q25A
Q26A~~Q26A
Q28A~~Q28A
Q30A~~Q30A
Q31A~~Q31A
Q38A~~Q38A
Q39A~~Q39A
Q40A~~Q40A
Q41A~~Q41A
Depression~~Depression
Anxiety~~Anxiety
Stress~~Stress
Depression~~Anxiety+Stress
Stress~~Anxiety
'
fit <- lavaan(mod, data=dass_21)
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
mod <- '
Depression =~ 1*Q3A + Q10A + Q17A + Q26A + Q31A + Q38A+ Q42A
Anxiety =~ 1*Q2A + Q4A + Q20A + Q25A + Q28A + Q30A + Q40A+ Q41A
Stress =~ 1*Q6A + Q8A + Q12A + Q18A + Q35A  + Q39A
Q2A~~Q2A
Q3A~~Q3A
Q4A~~Q4A
Q6A~~Q6A
Q8A~~Q8A
Q10A~~Q10A
Q12A~~Q12A
Q17A~~Q17A
Q18A~~Q18A
Q20A~~Q20A
Q25A~~Q25A
Q26A~~Q26A
Q28A~~Q28A
Q30A~~Q30A
Q31A~~Q31A
Q35A~~Q35A
Q38A~~Q38A
Q39A~~Q39A
Q40A~~Q40A
Q41A~~Q41A
Q42A~~Q42A
Depression~~Depression
Anxiety~~Anxiety
Stress~~Stress
Depression~~Anxiety+Stress
Stress~~Anxiety
'
fit <- lavaan(mod, data=dass_21)
summary(fit, fit.measures=T)
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
library(psych)
psych::alpha(dass_21)
psych::alpha(dass_21[,-c(2, 42, 18, 35)])
psych::alpha(dass_21)   # 0.9333392
mod <- '
Depression =~ 1*Q3A + Q10A + Q17A + Q26A + Q31A + Q38A
Anxiety =~ 1*Q4A + Q20A + Q25A + Q28A + Q30A + Q40A+ Q41A
Stress =~ 1*Q6A + Q8A + Q12A + Q39A
Q3A~~Q3A
Q4A~~Q4A
Q6A~~Q6A
Q8A~~Q8A
Q10A~~Q10A
Q12A~~Q12A
Q17A~~Q17A
Q20A~~Q20A
Q25A~~Q25A
Q26A~~Q26A
Q28A~~Q28A
Q30A~~Q30A
Q31A~~Q31A
Q38A~~Q38A
Q39A~~Q39A
Q40A~~Q40A
Q41A~~Q41A
Depression~~Depression
Anxiety~~Anxiety
Stress~~Stress
Depression~~Anxiety+Stress
Stress~~Anxiety
'
fit <- lavaan(mod, data=dass_21)
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25)]) # 0.9255625
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,39,30,41)]) # 0.9255625
semPaths(fit, what = "path", whatLabels = "stand", # style="lisrel",
edge.label.cex = 1,label.prop=0.9, edge.label.color = "black", rotation = 4,
equalizeManifests = FALSE, optimizeLatRes = TRUE, node.width = 1.5,
edge.width = 1, shapeMan = "rectangle", shapeLat = "ellipse",
shapeInt = "triangle", sizeMan = 3, sizeInt = 3, sizeLat = 4,
curve=2, unCol = "#070b8c")
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,39,30,41, 4)]) # 0.9157507
psych::alpha(dass_21[,-c(2, 35)])
psych::alpha(dass_21[,-c(2, 35)])[[2]]
psych::alpha(dass_21[,-c(2, 35)])[[3]]
psych::alpha(dass_21[,-c(2, 35)])
psych::alpha(dass_21[,-c(2, 35)])[[1]]
psych::alpha(dass_21[,-c(2, 35)])[[1]][,1:2]
psych::alpha(dass_21)   # 0.9333392
psych::alpha(dass_21[,-c(2, 35)])[[1]][,1:2]  # 0.9292942	; threshold: 0.6
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25)])[[1]][,1:2] # 0.9255625	; threshold: 0.65
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,39,30,41, 4)])[[1]][,1:2]
psych::alpha(dass_21[,1)])[[1]][,1:2] # 0.9109845 ; threhold: 0.7
psych::alpha(dass_21[,1])[[1]][,1:2] # 0.9109845 ; threhold: 0.7
psych::alpha(dass_21[,1:2])[[1]][,1:2] # 0.9109845 ; threhold: 0.7
fit
summary(fit)
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25)])[[1]][,1:2] # 0.9255625	; threshold: 0.65
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41)])[[1]][,1:2] # 0.9109845 ; threhold: 0.7
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40)])[[1]][,1:2] # 0.9109845 ; threhold: 0.75
length(c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40))
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40, 26, 31, 20, 12)])[[1]][,1:2] # 0.9047744 ; threhold: 0.75
dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40, 26, 31, 20, 12)]
sort(c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40, 26, 31, 20, 12))
psych::alpha(dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40, 26, 31, 20)])[[1]][,1:2] # 0.9047744 ; threhold: 0.75
dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40, 26, 31, 20)]
dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41,39, 4, 12,40)]
dass_21[,-c(2, 42, 18, 35, 25, 6,8,30,41)]
dass_21
dass_21[,-c(2, 35)]
dass_21
dplyr::select(dass_21, !c(Q2A, Q35A))
psych::alpha(dplyr::select(dass_21, !c(Q2A, Q35A)))[[1]][,1:2]  # 0.9292942	; threshold: 0.6
psych::alpha(dplyr::select(dass_21, !c(Q2A, Q35A, Q42A, Q18A, Q25A,
Q6A, Q8A, Q30A, Q41A)))[[1]][,1:2]  # 0.9315163	; threshold: 0.6
psych::alpha(dplyr::select(dass_21, !c(Q2A, Q35A, Q42A, Q18A, Q25A,
Q6A, Q8A, Q30A, Q41A, Q39A, Q4A, Q12A,
Q40A, Q26A, Q31A, Q20A)))[[1]][,1:2]
dplyr::select(dass_21, !c(Q2A, Q35A, Q42A, Q18A, Q25A,
Q6A, Q8A, Q30A, Q41A, Q39A, Q4A, Q12A,
Q40A, Q26A, Q31A, Q20A))
